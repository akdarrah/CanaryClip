= title "Edit #{@schematic.permalink}"

.container
  .row
    .col-xs-12.col-sm-3
      = render partial: "user/shared/menu"
    .col-xs-12.col-sm-9
      .well.well-lg.light-background
        %ol.breadcrumb
          %li= link_to "Builds", user_schematics_path
          %li.active Edit #{@schematic.permalink}
        %h2
          Edit #{@schematic.permalink}
          %span.label{class: schematic_state_label_class(@schematic.state)}
            = I18n.t("activerecord.attributes.schematic.states.#{@schematic.state}")
        %br
        = schematic_state_description(@schematic.state)
        %br
        - if @schematic.renders.standard_resolution.completed.exists?
          %label Change Render Position
          .well.well-sm.field-inline
            .row.sortable-images
              - @schematic.renders.standard_resolution.completed.each do |render|
                .col-xs-12.col-sm-3.render-image-container
                  = image_tag render.file.url, class: "img-responsive rounded sortable-render-image", data: {:"render-id" => render.id}
          %p.help-block= "Drag and drop build images to change the order they will be publicly displayed. <strong>The first build image will be used as the build's thumbnail image.</strong>".html_safe
          %br
        = simple_form_for [:user, @schematic] do |f|
          = f.simple_fields_for :renders do |builder|
            = builder.input :position, as: :hidden, input_html: {class: "render-position-field-#{builder.object.id}"}
          = f.input :description, input_html: {rows: 5, class: "textcomplete"}
          = f.input :tag_list, input_html: {class: "tag-list"}, wrapper_html: {class: "no-margin"}
          %p.help-block Add keywords as tags to help other builders find your build.
          %br
          = f.button :submit, 'Save', class: "btn btn-primary"
        %br
        - if @schematic.destroyable?
          .panel.panel-danger
            .panel-heading
              %h3.panel-title Delete This Build
            .panel-body
              = button_to "Delete This Build", user_schematic_path(@schematic), data: { confirm: "Are you sure?" }, method: :delete, class: 'btn btn-danger'

- content_for :script do
  :javascript
    $(document).ready(function(){
      $('.tag-list').tagsInput({
        width       : '100%',
        defaultText : 'Add a tag',
        placeholderColor : '#999'
      });

      $('.textcomplete').textcomplete([
        { // emoji strategy
            id: 'emoji',
            match: /\B:([\-+\w]*)$/,
            search: function (term, callback) {
                callback($.map(emojies, function (emoji) {
                    return emoji.indexOf(term) === 0 ? emoji : null;
                }));
            },
            template: function (value) {
                return '<img class="emoji" src="https://a248.e.akamai.net/assets.github.com/images/icons/emoji/' + value + '.png"></img>&nbsp;' + value;
            },
            replace: function (value) {
                return ':' + value + ': ';
            },
            index: 1
        }
      ], {
          onKeydown: function (e, commands) {
              if (e.ctrlKey && e.keyCode === 74) { // CTRL-J
                  return commands.KEY_ENTER;
              }
          }
      });

      $('.sortable-images').sortable({
        containment: "parent",
        forcePlaceholderSize: true,
        handle: "img",
        helper: "clone",
        update: function( event, ui ) {
          $(".sortable-render-image").each(function(index, el){
            var renderId = $(el).data('renderId');
            $(".render-position-field-" + renderId).val(index + 1);
          });
        }
      });
    });
